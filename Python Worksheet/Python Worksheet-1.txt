                                  
                                       PYTHON  WORKSHEET 2

Q1 to Q8 have only one correct answer. Choose the correct option to answer your question.

1. Which of the following is not a core datatype in python?
A) list B) struct
C) tuple D) set

Ans:- B) struct

2. Which of the following is an invalid variable name in python?
A) _init_ B) no_1
C) 1_no D) _1

Ans:- C) 1_no

3. Which one of the following is a keyword in python?
A) in B) _init_
C) on D) foo

Ans:- A) in

4. In which of the following manner are the operators of the same precedence executed in python?
A) Left to Right B) BODMAS
C) Right to Left D) None of these

Ans:- A) Left to right

5. Arrange the following in decreasing order of the precedence when they appear in an expression in python?
i) Multiplication ii) Division iii) Exponential iv) Parentheses
A) iii – iv – ii – i B) iii – iv – i – ii
C) iv – iii – ii – i D) iii – ii – i – iv

Ans:- C) iv-iii-ii-i

6. (28//6)**3/3%3 = ?
A) 7.1111… B) 0
C) 0.3333… D) 1

Ans:-  C) 0.3333....

7. Which of the following is not equal to x16 ?
A) x**4**4 B) x**16
C) x^16 D) (x**4)**4

Ans:- A) x**4**4

8. a = input(“Enter an integer”). What will be the data type of a?
A) int B) str
C) float D) double

Ans:- B) str

Q9 and Q10 have multiple correct answers. Choose all the correct options to answer your question.

9. Which of the following statements are correct?
A) Division and multiplication have same precedence in python
B) Python’s operators’ precedence is based on PEDMAS
C) Python’s operators’ precedence is based on VBODMAS
D) In case of operators’ having same precedence, the one on the left side is executed first.

Ans:- A) Division and multiplication have same precedance in python.
          B) Python's operators' precedance is based on PEDMAS

10. Which of the following is(are) valid statement(s) in python?
A) abc = 1,000,000 B) a b c = 1000 2000 3000
C) a,b,c = 1000, 2000, 3000 D) a_b_c = 1,000,000

Ans:- A) abc = 1,000,000
          C) a,b,c = 1000, 2000, 3000
          D) a-b_c = 1,000,000

Q11 to Q13 are subjective questions, answer them briefly

11. Differentiate between a list, tuple, set and dictionary.

Ans:-  1) List:- It is  just like dynamic sized array, no need to be homogeneous always which makes it more powerfull tool in Python
               Characteristics :- list is a datatype available in Python which can be written as a list of comma-seperated values( items) between square brackets.
           
       2) Tuple:-  The sequence of value stored in a tuple can be of any type, and they are indexed by integers. although it is not necessary, it is more common
                              to define tuple by closing the sequence of values in parenthesis.
                Characteristics:- 1) it is defined under parenthesis().
                                            2) Tuples can store anytype of element.
                
       3) Set:- Set is an unordered collection of data type that is iterable, mutable and has no duplicate elements. it is hoghly optimized method for checking 
                          whether a specific element is contained in the set.
                Characteristics:- Here the order in which the elements are added into the set is not fixed, it can change frequently.
                                             
       4) Dictionary :- It is unordered collection of data values, used to store data vallues like a map, which unlike other data types that hold only single value 
                                       as an element.
                 Chracteristics:- Keys in a dictionary doesn't allow Polymorphism.

     ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
     ▐                List            ▌                    Set             ▌                Tuple                    ▌           Dictionary                      ▌
     ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
     ▌    Lists is mutable            ▌   Set is immutable                 ▌    Tuple is immutable                   ▌   Values can be any type of object        ▌
     ▌                                ▌                                    ▌                                         ▌    but keys must be immutable             ▌
     ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
     ▌    It is ordered collection    ▌   It is unoredered collection      ▌    It is unordered collection           ▌    it unordered collection of             ▌
     ▌    of items                    ▌   of items                         ▌    of items                             ▌    data                                   ▌ 
     ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
     ▌    Items in list can be        ▌   Items in set cannot be           ▌    Items in tuple cannot be             ▌    Items / new pair  of key values        ▌
     ▌    replaced                    ▌   changed                          ▌    changed                              ▌    can be added                           ▌ 
     ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬                  
     ▌    Example:-                   ▌   Example:-                        ▌    Example:-                            ▌    Example:-                              ▌  
     ▌    List = [10, 20, 30 ]        ▌   Set1 = set(["Hello ", "World"])  ▌    Tuple = (10, 20, 30 )                ▌    car = {1:"Hello". 2:"World"}           ▌
     ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬                                                                                                   

12. Are strings mutable in python? Suppose you have a string “I+Love+Python”, write a small code to replace ‘+’
with space in python.

Ans:- Strings are array in python, any character in python is string. Strings are immutable just like an array & tuples. Immutability is a clean and efficient 
solution to concurrent access. Having immutable variables means that no matter how many times the method is called with the same variable / value, the
output will  always be the same.

Immutable strings greatly simplify memory allocation when compared with C strings, you don't guess at a length and over-allocate hoping you 
over-allocated enough.

The elements of the strings can be accessed by slicing and indexing, elements can be replaced using replace( ) method, it generates a copy of the string
with new replaced items.
 
Advantage:-
We also knowing that a string is immutable means we can allocate space for it at creation time, nad the storage requirements are fixed and unchanging.
String in python are considered as "elemental" as numbers, No amount of activity will change the value 8 to anything else, and in python, no amount of activity
will change the value 8 to anything else, and in Python no amount  of activity will change the string "eight" to anything else.

Example:- ln [1]:  a = "I+Love+Python"                     # defining a
                   new_a = a.replace("+"," ")              # replacing + with space(" ")
                   new_a                                   # printing final output


13. What does the function ord() do in python? Explain with example. Also, write down the function for getting
the datatype of a variable in python.

Ans:- It is inbuilt ord( ) function in Python, given string of length one, return an integer representing the Unicode code point of the cahracter when the argument is a unicode
object, or the value of the byte when the argument is an 8 bit string. 

 Example :- ord("a") return the integer 97, ord("$") returns 36. This is the inverse of chr( ) for 8 bit strings and of unichr( )for unicode objects.
 
If a unicode argument is given and python was built with UCS2 unicode, then the character's code point must be in the range[0...65535] inclusive. 

Type( ) Function :- It is very simple syntax and can be used to find the type of any variable in python be it a collection type variable, a class object variable or
a simple string or integer.

syntax:- type(variable name)       Example : - a=12         # defining variable a
                                               type(a)      # printing type variable



Q14 and Q15 are programming questions. Answer them in Jupyter Notebook.

14. Write a python program to solve a quadratic equation of the form 𝑎𝑥
2 + 𝑏𝑥 + 𝑐 = 0. Where a, b and c are to
be taken by user input. Handle the erroneous input, such as ‘a’ should not be equal to 0.

Ans:-   # Notebook:- Quadratic equation


15. Write a python program to find the sum of first ‘n’ natural numbers without using any loop. Ask user to input
the value of ‘n’.

Ans:-    # Notebook :- Sum of of "n" natural numbers without loop.
